/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import static java.lang.System.err;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author kubak
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        table_update();
        table_plan();
    }
public class DBcon
{
  static final String DRIVER = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
  static final String DB_URL = "jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022";
  static final String DB_USER = "PAB2022";
  static final String DB_PASSWORD = "zaq1@WSX";
  Connection connection;
   public DBcon(){
    connect();
  
}
   public void connect(){
    try{
      Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
      connection = DriverManager.getConnection("pab-server.database.windows.net", "Pab2022", "zaq1@WSX");
    }catch(SQLException|ClassNotFoundException e){
      System.out.println("ERROR connecting to database!");
      System.out.println(e.toString());
    }
  }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
        Connection con1;
        PreparedStatement insert;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        text3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text1 = new javax.swing.JTextField();
        text2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Przedmiot", "ECTS", "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(text3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(text3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Plan", jPanel1);

        jLabel1.setText("Kierunek");

        jLabel2.setText("Wydzial");

        jButton1.setText("Dodaj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edytuj");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Usun");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numer", "Kierunek", "Wydzial"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(37, 37, 37)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(120, 120, 120))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Kierunki", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         String nazwa_kierunku = text1.getText();
        String wydzial = text2.getText();
      //  String lab3 = text3.getText();
      //  String lab0 = text4.getText();
//
//

         try {
            // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
                      
            insert = polaczenie.prepareStatement("insert into kierunek(nazwa_kierunku,wydzial)values(?,?)");
                        //insert.setString(3, lab0);

            insert.setString(1, nazwa_kierunku);
            insert.setString(2, wydzial);
         //   insert.setString(3, lab3);
//            insert.setString(4, lab4);

            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Rekord added");

            table_update();
            
            text1.setText("");
            text2.setText("");
            text1.requestFocus();
            
            
                        
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:                                   
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
        
         try {
             int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
            String nazwa_kierunku = text1.getText();
            String wydzial = text2.getText();
        
            // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
                      
            insert = polaczenie.prepareStatement("update kierunek set nazwa_kierunku=?,wydzial=? where id=?");
                        //insert.setString(3, lab0);

            insert.setString(1, nazwa_kierunku);
            insert.setString(2, wydzial);
            insert.setInt(3, id);
         //   insert.setString(3, lab3);
//            insert.setString(4, lab4);

            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Rekord Update");

            table_update();
            
            text1.setText("");
            text2.setText("");
            text1.requestFocus();
            
            
                        
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
                                           

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
                                    
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
          try {
              
               int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

               int dialogResult = JOptionPane.showConfirmDialog(null,"Czy chcesz usunac?","Warning",JOptionPane.YES_NO_OPTION);
               if(dialogResult == JOptionPane.YES_OPTION)
               {
                // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
                      
            insert = polaczenie.prepareStatement("delete from kierunek where id=?");

            insert.setInt(1, id);

            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Rekord Deleted");

            table_update();
            
            text1.setText("");
            text2.setText("");
            text1.requestFocus();
        
               }
      
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
        text1.setText(Df.getValueAt(selectedIndex,1).toString());
        text2.setText(Df.getValueAt(selectedIndex,2).toString());
        
                         
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int a;
        try {
            // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
                      
            insert = polaczenie.prepareStatement(" select imie,nazwisko from prowadzacy,prowadzacyprzedmiot where prowadzacy.id=prowadzacyprzedmiot.id_przedmiotu");
            ResultSet rs = insert.executeQuery();
            java.sql.ResultSetMetaData Rss = rs.getMetaData();
            //a = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel)jTable2.getModel();
            Df.setRowCount(0);
            int b=1;
            
            while (rs.next())
            {
            Vector v2 = new Vector();
            for(int i=1;i==b;i++)
            {
            //v2.add(rs.getString("imie"));
            JOptionPane.showMessageDialog(this,"Prowadzacy " + (rs.getString("imie")) + " " + (rs.getString("nazwisko")));
            table_plan();
            }
            //Df.addRow(v2);
            }
            //DefaultTableModel Df = (DefaultTableModel)jTable2.getModel();
            //int selectedIndex = jTable2.getSelectedRow();
            //text3.setText(Df.getValueAt(selectedIndex,1).toString());
            //int c;
            //Df.getValueAt(selectedIndex,1).toString();
            //JOptionPane.showMessageDialog(this,"Prowadzacy " + Df.getValueAt(selectedIndex,3).toString());
                        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jTable2MouseClicked
private void table_update()
{

    int a;
  try {
            // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
                      
            insert = polaczenie.prepareStatement("select * from kierunek");
            ResultSet rs = insert.executeQuery();
            java.sql.ResultSetMetaData Rss = rs.getMetaData();
            a = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
            Df.setRowCount(0);
            
            while (rs.next())
            {
            Vector v2 = new Vector();
            for(int i=1;i<=a;i++)
            {
            v2.add(rs.getString("id"));
            v2.add(rs.getString("nazwa_kierunku"));
            v2.add(rs.getString("wydzial"));
            
            }
            Df.addRow(v2);
            }
                        
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }

}
     private void table_plan()
{

    int a;
    try {
            // załadowanie sterownika
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            // utworzenie połączenia
            Connection polaczenie= DriverManager.getConnection
                            ("jdbc:sqlserver://pab-server.database.windows.net:1433;database=PAB2022;user=pab2022@pab-server;password=zaq1@WSX;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;");
            System.out.println("Działa");
            insert = polaczenie.prepareStatement("select * from przedmiot");
     
            ResultSet rs = insert.executeQuery();
            java.sql.ResultSetMetaData Rss = rs.getMetaData();
            a = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel)jTable2.getModel();
            Df.setRowCount(0);
            
            while (rs.next())
            {
            Vector v2 = new Vector();
            for(int i=1;i<=a;i++)
            {
            v2.add(rs.getString("nazwa_przedmiotu"));
            v2.add(rs.getString("punkty_ects"));
            v2.add(rs.getString("typ_przedmiotu"));
            v2.add(rs.getString("id"));
            }
            Df.addRow(v2);
            }
    
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }

}
                    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField text1;
    private javax.swing.JTextField text2;
    private javax.swing.JTextField text3;
    // End of variables declaration//GEN-END:variables
}
